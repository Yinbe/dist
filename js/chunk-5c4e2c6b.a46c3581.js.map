{"version":3,"sources":["webpack:///./src/views/admin/category/index.vue?de01","webpack:///src/views/admin/category/index.vue","webpack:///./src/views/admin/category/index.vue?9c3b","webpack:///./src/views/admin/category/index.vue","webpack:///./src/utils/github-api.js","webpack:///./src/views/admin/category/index.vue?ba0c"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","_l","category","item","key","id","attrs","randomColor","on","$event","handleClose","_v","_s","ref","handleInputConfirm","model","value","callback","$$v","inputValue","expression","showInput","staticRenderFns","data","inputVisible","colors","mounted","methods","getCategory","githubApi","file","updateCategory","JSON","res","name","confirm","console","component","require","githubOauthOptions","baseApiURL","owner","repo","branch","baseRepoURL","baseRawURL","getFileSha","fileName","token","getToken","fetch","method","headers","mode","response","json","sha","getFile","getTextRawFile","ok","text","getJsonRawFile","addFile","content","utf8ToBase64","body","message","committer","email","header","stringify","status","msg","removeFile","path","updateFile","upLoadMediaFile","checkRepo","_","params","access_token","to","axios","get","err","forkRepo","post"],"mappings":"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","file":"js/chunk-5c4e2c6b.a46c3581.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"view\"},[_vm._l((_vm.category.data),function(item){return _c('el-tag',{key:item.id,attrs:{\"color\":_vm.randomColor(),\"closable\":\"\",\"disable-transitions\":true},on:{\"close\":function($event){return _vm.handleClose(item)}}},[_vm._v(_vm._s(item))])}),(_vm.inputVisible)?_c('el-input',{ref:\"saveTagInput\",staticClass:\"input-new-tag\",attrs:{\"size\":\"small\"},on:{\"blur\":_vm.handleInputConfirm},model:{value:(_vm.inputValue),callback:function ($$v) {_vm.inputValue=$$v},expression:\"inputValue\"}}):_c('el-button',{staticClass:\"button-new-tag\",attrs:{\"size\":\"small\"},on:{\"click\":_vm.showInput}},[_vm._v(\"+ New Category\")])],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"view\">\r\n    <el-tag\r\n      :key=\"item.id\"\r\n      :color=\"randomColor()\"\r\n      v-for=\"item in category.data\"\r\n      closable\r\n      :disable-transitions=\"true\"\r\n      @close=\"handleClose(item)\"\r\n      >{{ item }}</el-tag\r\n    >\r\n    <el-input\r\n      class=\"input-new-tag\"\r\n      v-if=\"inputVisible\"\r\n      v-model=\"inputValue\"\r\n      ref=\"saveTagInput\"\r\n      size=\"small\"\r\n      @blur=\"handleInputConfirm\"\r\n    ></el-input>\r\n    <el-button v-else class=\"button-new-tag\" size=\"small\" @click=\"showInput\"\r\n      >+ New Category</el-button\r\n    >\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { githubApi } from \"@/utils/github-api\";\r\nimport {base64ToUtf8} from \"../../../utils/common\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      category: {},\r\n      inputVisible: false,\r\n      inputValue: \"\",\r\n      colors: [\r\n        \"#005387\",\r\n        \"#8cb811\",\r\n        \"#fdb813\",\r\n        \"#88aca1\",\r\n        \"#788cb6\",\r\n        \"#a1a1a4\",\r\n        \"#ced7df\",\r\n        \"#decba5\",\r\n        \"#566127\",\r\n        \"#76daff\",\r\n      ],\r\n    };\r\n  },\r\n  async mounted() {\r\n    await this.getCategory();\r\n  },\r\n  methods: {\r\n    async getCategory() {\r\n      const file = await githubApi.getFile(\"db/_post/category.json\");\r\n      if (!file) {\r\n        this.$message.error(\"No data\");\r\n        return;\r\n      }\r\n      this.category = JSON.parse(base64ToUtf8(file.content));\r\n      this.category.sha = file.sha;\r\n    },\r\n    async updateCategory() {\r\n      const res = await githubApi.updateFile(\r\n        this.category.path,\r\n        this.category.sha,\r\n        JSON.stringify(this.category)\r\n      );\r\n      if (res.status !== \"OK\") {\r\n        this.$message.error(res.msg);\r\n        return;\r\n      }\r\n      this.$message(res.msg);\r\n      await this.getCategory();\r\n    },\r\n    async handleClose(name) {\r\n      if (!confirm(\"确定删除？\")) return;\r\n      this.category.data = this.category.data.filter((item) => {\r\n        return item != name;\r\n      });\r\n      console.log(this.category.data);\r\n      await this.updateCategory();\r\n    },\r\n    showInput() {\r\n      this.inputVisible = true;\r\n      this.$nextTick((_) => {\r\n        this.$refs.saveTagInput.$refs.input.focus();\r\n      });\r\n    },\r\n    async handleInputConfirm() {\r\n      if (!this.inputValue) {\r\n        this.inputVisible = false;\r\n        this.inputValue = \"\";\r\n        return;\r\n      }\r\n      this.category.data.push(this.inputValue);\r\n      this.inputVisible = false;\r\n      this.inputValue = \"\";\r\n      await this.updateCategory();\r\n    },\r\n    randomColor() {\r\n      return this.colors[Math.floor(Math.random() * 10)];\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.view {\r\n  margin-top: 50px;\r\n  margin-left: 50px;\r\n  .button-new-tag {\r\n    margin-left: 10px;\r\n    height: 32px;\r\n    line-height: 30px;\r\n    padding-top: 0;\r\n    padding-bottom: 0;\r\n  }\r\n  .input-new-tag {\r\n    width: 90px;\r\n    margin-left: 10px;\r\n    vertical-align: bottom;\r\n  }\r\n}\r\n</style>\r\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=2f98673c&scoped=true&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\nimport style0 from \"./index.vue?vue&type=style&index=0&id=2f98673c&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"2f98673c\",\n  null\n  \n)\n\nexport default component.exports","import axios from \"@/ajax/request\";\r\nimport { getToken } from \"@/utils/cookie-util\";\r\nimport { to, utf8ToBase64, base64ToUtf8 } from \"@/utils/common\";\r\n\r\nconst { githubOauthOptions } = require(\"@/settings\");\r\nconst { baseApiURL, owner, repo, branch } = githubOauthOptions;\r\n\r\nconst baseRepoURL = `${baseApiURL}/repos/${owner}/${repo}/contents`;\r\nconst baseRawURL = `https://raw.githubusercontent.com/${owner}/${repo}/${branch}`;\r\nconst githubApi = {\r\n  getFileSha: async (fileName) => {\r\n    let token = getToken();\r\n    let response = await fetch(`${baseRepoURL}/${fileName}`, {\r\n      method: 'GET',\r\n      headers: {\r\n          'Accept': 'application/vnd.github.v3+json',\r\n          'Authorization': `token ${token}`\r\n      },\r\n      mode:'cors'\r\n    });\r\n    let data = await response.json();\r\n    if (!data) {\r\n      return \"\";\r\n    }\r\n    if (!data.sha) {\r\n      return \"\";\r\n    }\r\n    return data.sha;\r\n  },\r\n\r\n  getFile: async (fileName) => {\r\n    let token = getToken()\r\n    let response = await fetch(`${baseRepoURL}/${fileName}`, {\r\n      method: 'GET',\r\n      headers: {\r\n          'Accept': 'application/vnd.github.v3+json',\r\n          'Authorization': `token ${token}`\r\n      },\r\n      mode:'cors'\r\n    });\r\n    let data = await response.json();\r\n    if (!data) {\r\n      return null;\r\n    }\r\n    return data;\r\n  },\r\n\r\n  getTextRawFile: async (fileName) => {\r\n    let response = await fetch(`${baseRawURL}/${fileName}`)\r\n    if (!response.ok) {\r\n      return null;\r\n    }\r\n    let data = await response.text();\r\n    return data;\r\n  },\r\n\r\n  getJsonRawFile: async (fileName) => {\r\n    let response = await fetch(`${baseRawURL}/${fileName}`)\r\n    if (!response.ok) {\r\n      return null;\r\n    }\r\n    let data = await response.json();\r\n    return data;\r\n\r\n  },\r\n\r\n  addFile: async (fileName, content) => {\r\n    content = utf8ToBase64(content);\r\n    let body = {\r\n      message: 'commit message',\r\n      committer: {\r\n        name: 'Yinbe',\r\n        email: 'Yinbe@github.com'\r\n      },\r\n      content: content\r\n    }\r\n    let token = getToken()\r\n    let header = {\r\n      'Accept': 'application/vnd.github.v3+json',\r\n      'Authorization': `token ${token}`\r\n    }\r\n    let response = await fetch(`${baseRepoURL}/${fileName}`, {\r\n      method: 'PUT',\r\n      headers: header,\r\n      body: JSON.stringify(body),\r\n      mode:'cors',\r\n    });\r\n    if (!response.ok) {\r\n      return {\r\n        status: \"Fail\",\r\n        msg: `添加失败： `,\r\n      };\r\n    }\r\n    return {\r\n      status: \"OK\",\r\n      msg: `添加成功： ${fileName}`,\r\n    };\r\n  },\r\n\r\n  removeFile: async (fileName) => {\r\n    const sha = await githubApi.getFileSha(fileName);\r\n    if (!sha) {\r\n      return {\r\n        status: \"Fail\",\r\n        msg: `不存在 ${fileName}`,\r\n      };\r\n    }\r\n    let token = getToken()\r\n    let body = {\r\n      owner: owner,\r\n      repo: repo,\r\n      path: fileName,\r\n      message: 'commit message',\r\n      committer: {\r\n        name: 'Yinbe',\r\n        email: 'Yinbe@github.com'\r\n      },\r\n      sha: sha\r\n    }\r\n    let response = await fetch(`${baseRepoURL}/${fileName}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n          'Accept': 'application/vnd.github.v3+json',\r\n          'Authorization': `token ${token}`\r\n      },\r\n      body: JSON.stringify(body),\r\n      mode:'cors'\r\n    });\r\n    if (!response.ok) {\r\n      return {\r\n        status: \"Fail\",\r\n        msg: `删除失败!`,\r\n      };\r\n    }\r\n    return {\r\n      status: \"OK\",\r\n      msg: `删除成功： ${fileName}`,\r\n    };\r\n  },\r\n\r\n  updateFile: async (fileName, sha, content) => {\r\n    content = utf8ToBase64(content);\r\n    let body = {\r\n      message: 'commit message',\r\n      committer: {\r\n        name: 'Yinbe',\r\n        email: 'Yinbe@github.com'\r\n      },\r\n      content: content,\r\n      sha: sha\r\n    }\r\n    let token = getToken()\r\n    let header = {\r\n      'Accept': 'application/vnd.github.v3+json',\r\n      'Authorization': `token ${token}`\r\n    }\r\n    let response = await fetch(`${baseRepoURL}/${fileName}`, {\r\n      method: 'PUT',\r\n      headers: header,\r\n      body: JSON.stringify(body),\r\n      mode:'cors',\r\n    });\r\n    if (!response.ok) {\r\n      return {\r\n        status: \"Fail\",\r\n        msg: `更新失败`,\r\n      };\r\n    }\r\n    return {\r\n      status: \"OK\",\r\n      msg: `更新成功： ${fileName}`,\r\n    };\r\n  },\r\n\r\n  upLoadMediaFile: async (fileName, content) => {\r\n    content = utf8ToBase64(content);\r\n    let body = {\r\n      message: 'commit message',\r\n      committer: {\r\n        name: 'Yinbe',\r\n        email: 'Yinbe@github.com'\r\n      },\r\n      content: content\r\n    }\r\n    let token = getToken()\r\n    let header = {\r\n      'Accept': 'application/vnd.github.v3+json',\r\n      'Authorization': `token ${token}`\r\n    }\r\n    let response = await fetch(`${baseRepoURL}/${fileName}`, {\r\n      method: 'PUT',\r\n      headers: header,\r\n      body: JSON.stringify(body),\r\n      mode:'cors',\r\n    });\r\n    if (!response.ok) {\r\n      return {\r\n        status: \"Fail\",\r\n        msg: `添加失败： `,\r\n      };\r\n    }\r\n    return {\r\n      status: \"OK\",\r\n      msg: `添加成功： ${fileName}`,\r\n    };\r\n  },\r\n\r\n  checkRepo: async (_) => {\r\n    const params = { access_token: getToken() };\r\n    const [err, res] = await to(axios.get(baseRepoURL, { params }));\r\n    if (err) {\r\n      return false;\r\n    }\r\n    return true;\r\n  },\r\n\r\n  forkRepo: async (_) => {\r\n    const data = { access_token: getToken() };\r\n    const [err, res] = await to(\r\n      axios.post(`${baseApiURL}/repos/zclzone/gitee-db/forks`, { data })\r\n    );\r\n    if (err) {\r\n      return {\r\n        status: \"Fail\",\r\n      };\r\n    }\r\n    return {\r\n      status: \"OK\",\r\n    };\r\n  },\r\n};\r\n\r\nexport { githubApi };\r\n","export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=style&index=0&id=2f98673c&lang=scss&scoped=true&\""],"sourceRoot":""}